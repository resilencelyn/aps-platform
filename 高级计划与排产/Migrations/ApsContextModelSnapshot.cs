// <auto-generated />

using System;
using Aps.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

namespace Aps.Migrations
{
    [DbContext(typeof(ApsContext))]
    partial class ApsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("高级计划与排产.Entity.ApsAssemblyProcess", b =>
                {
                    b.Property<string>("PartId")
                        .HasColumnType("varchar(255)");

                    b.Property<uint?>("MaximumProductionQuantity")
                        .HasColumnType("int unsigned");

                    b.Property<uint?>("MinimumProductionQuantity")
                        .HasColumnType("int unsigned");

                    b.Property<string>("OutputFinishedProductProductId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PartName")
                        .HasColumnType("longtext");

                    b.Property<int>("ProductionMode")
                        .HasColumnType("int");

                    b.Property<uint>("ProductionTime")
                        .HasColumnType("int unsigned");

                    b.Property<int>("Workspace")
                        .HasColumnType("int");

                    b.HasKey("PartId");

                    b.HasIndex("OutputFinishedProductProductId");

                    b.ToTable("ApsAssemblyProcesses");
                });

            modelBuilder.Entity("高级计划与排产.Entity.ApsManufactureProcess", b =>
                {
                    b.Property<string>("PartId")
                        .HasColumnType("varchar(255)");

                    b.Property<uint?>("MaximumProductionQuantity")
                        .HasColumnType("int unsigned");

                    b.Property<uint?>("MinimumProductionQuantity")
                        .HasColumnType("int unsigned");

                    b.Property<string>("PartName")
                        .HasColumnType("longtext");

                    b.Property<string>("PrevPartId")
                        .HasColumnType("longtext");

                    b.Property<int>("ProductionMode")
                        .HasColumnType("int");

                    b.Property<uint>("ProductionTime")
                        .HasColumnType("int unsigned");

                    b.Property<int>("Workspace")
                        .HasColumnType("int");

                    b.HasKey("PartId");

                    b.ToTable("ApsProcesses");
                });

            modelBuilder.Entity("高级计划与排产.Entity.ApsOrder", b =>
                {
                    b.Property<string>("OrderId")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("EarliestStartTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("LatestEndTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ProductId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("ApsOrders");
                });

            modelBuilder.Entity("高级计划与排产.Entity.ApsProduct", b =>
                {
                    b.Property<string>("ProductId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("ProductId");

                    b.ToTable("ApsProduct");
                });

            modelBuilder.Entity("高级计划与排产.Entity.ApsResource", b =>
                {
                    b.Property<string>("ResourceId")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("ApsAssemblyProcessPartId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ApsManufactureProcessPartId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("BasicAttributes")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ResourceAttributes")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ResourceType")
                        .HasColumnType("int");

                    b.Property<int>("Workspace")
                        .HasColumnType("int");

                    b.HasKey("ResourceId");

                    b.HasIndex("ApsAssemblyProcessPartId");

                    b.HasIndex("ApsManufactureProcessPartId");

                    b.ToTable("ApsResources");
                });

            modelBuilder.Entity("高级计划与排产.Entity.ApsSemiProduct", b =>
                {
                    b.Property<string>("SemiProductId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ApsAssemblyProcessPartId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ApsProductProductId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("SemiProductId");

                    b.HasIndex("ApsAssemblyProcessPartId");

                    b.HasIndex("ApsProductProductId");

                    b.ToTable("ApsSemiProducts");
                });

            modelBuilder.Entity("高级计划与排产.Entity.ApsAssemblyProcess", b =>
                {
                    b.HasOne("高级计划与排产.Entity.ApsProduct", "OutputFinishedProduct")
                        .WithMany()
                        .HasForeignKey("OutputFinishedProductProductId");

                    b.Navigation("OutputFinishedProduct");
                });

            modelBuilder.Entity("高级计划与排产.Entity.ApsManufactureProcess", b =>
                {
                    b.HasOne("高级计划与排产.Entity.ApsManufactureProcess", "PrevPart")
                        .WithOne()
                        .HasForeignKey("高级计划与排产.Entity.ApsManufactureProcess", "PartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("高级计划与排产.Entity.ApsSemiProduct", null)
                        .WithMany("ApsManufactureProcesses")
                        .HasForeignKey("PartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrevPart");
                });

            modelBuilder.Entity("高级计划与排产.Entity.ApsOrder", b =>
                {
                    b.HasOne("高级计划与排产.Entity.ApsProduct", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("高级计划与排产.Entity.ApsResource", b =>
                {
                    b.HasOne("高级计划与排产.Entity.ApsAssemblyProcess", null)
                        .WithMany("ApsResources")
                        .HasForeignKey("ApsAssemblyProcessPartId");

                    b.HasOne("高级计划与排产.Entity.ApsManufactureProcess", null)
                        .WithMany("ApsResources")
                        .HasForeignKey("ApsManufactureProcessPartId");
                });

            modelBuilder.Entity("高级计划与排产.Entity.ApsSemiProduct", b =>
                {
                    b.HasOne("高级计划与排产.Entity.ApsAssemblyProcess", null)
                        .WithMany("InputSemiFinishedProducts")
                        .HasForeignKey("ApsAssemblyProcessPartId");

                    b.HasOne("高级计划与排产.Entity.ApsProduct", null)
                        .WithMany("AssembleBySemiProducts")
                        .HasForeignKey("ApsProductProductId");
                });

            modelBuilder.Entity("高级计划与排产.Entity.ApsAssemblyProcess", b =>
                {
                    b.Navigation("ApsResources");

                    b.Navigation("InputSemiFinishedProducts");
                });

            modelBuilder.Entity("高级计划与排产.Entity.ApsManufactureProcess", b =>
                {
                    b.Navigation("ApsResources");
                });

            modelBuilder.Entity("高级计划与排产.Entity.ApsProduct", b =>
                {
                    b.Navigation("AssembleBySemiProducts");
                });

            modelBuilder.Entity("高级计划与排产.Entity.ApsSemiProduct", b =>
                {
                    b.Navigation("ApsManufactureProcesses");
                });
#pragma warning restore 612, 618
        }
    }
}
